/**
 * @file new_start.cpp
 * @author spikeIHG (lanruo864@gmail.com)
 * @brief 
 * @version 1.0
 * @date 2023-09-08
 * 
 * For Ms.Winter 
 * Le vent se lève, il faut tenter de vivre.
 * 
 */
//! 类 一  
// 1. 设计类 花时间确定类的成员以及基本的接口 即成员函数
//2 this 顶层指针 隐藏参数 默认使用的 const 内外的定义都要记得加 可以重载
// 3 inline与定义的位置
// 4 友元声明 前向声明 注意友元不是函数声明 
// 5 构造函数就是初始化控制函数 无return 默认初始化控制 直接初始化
//6 发生的情形 默认初始化情形 没有指定值的显示初始化非static块作用域  值初始化 T() 局部静态static无初始值 默认与值初始胡都是默认构造
// 7 多次重复 或者 不断更新调bug的代码写成 小函数 多写小函数 并考虑inline
// 8 使用值初始化列表 并且最好记得提供类内初始值 只能 用 {} = 不能（）
// 9 默认构造函数 是无形参的构造函数 可以有默认形参 
// 10 委托构造 写一个多形参的 去 定义其他
// 11 隐式类型转换 explicit 关键词 转换机制 只能一步 用于辅助拷贝初始化或者是赋值 函数调用 通常是很重要的类型
// 12 explicit抑制  就只能明确()调用 vector(10)； 认可用于显示 类类型转化 只用一个形参的 构造函数
// 13 mutable static 类外定义



//! 类 二
//1 拷贝控制成员 析构函数 
// 2 三五原则 对称之美 先看是否需要析构函数 了解虚构函数函数体是单独作用的 其余都是隐式析构 有析构基本就需要定义拷贝//
// 3 定义了拷贝初始 就要定义拷贝赋值
//4 = default =delete 阻止 防止默认生成 =defau't只能用于几个控制成员 =delete可以用于所有函数
// 5 类成员中 的 const 与 引用成员 必须要自己指定 默认合成会删除
// 6 析构函数 不能是 删除的
// 7 浅拷贝 即是行为像指针的类 深拷贝 即 是行为像值的类
// 8 编写拷贝构造函数 析构函数 先 赋值 综合了析构与拷贝初始化 先析构然后初始化且要保证自赋值正确
//9 解决方案 就是先将左侧保存下来 或是先进行自己的检查 是否是自付值



